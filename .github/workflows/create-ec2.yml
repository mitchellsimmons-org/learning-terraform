name: Create EC2 Instance Workflow

on:
  push:
    paths:
      - "create-ec2/**"
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
    paths:
      - create-ec2/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

defaults:
  run:
    working-directory: ./create-ec2

jobs:
  deploy-dev:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-southeast-2
      ENVIRONMENT: dev
      PLAN_FILE: plan.tfplan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::821004912746:role/GithubRunnerLearningTerraformRole
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Terraform Init
        run: >
          terraform init
            -input=false
            -backend-config="region=${{ env.AWS_REGION }}"
            -backend-config="bucket=github-learning-terraform-state"
            -backend-config="key=state/create-ec2/${{ env.ENVIRONMENT }}-terraform.tfstate"
            -backend-config="dynamodb_table=github-learning-terraform-state"
            -backend-config="encrypt=true"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -out=${{ env.PLAN_FILE}}

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve ${{ env.PLAN_FILE}}

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main'
        run: terraform destroy -input=false -auto-approve
